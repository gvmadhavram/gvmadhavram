import socket
import threading

def handle_client(client_socket, address):
    print(f"Accepted connection from {address}")
    while True:
        try:
            message = client_socket.recv(1024).decode('utf-8')
            if message:
                print(f"Received from {address}: {message}")
                client_socket.send(bytes("Message received", 'utf-8'))
        except:
            print(f"Connection closed from {address}")
            client_socket.close()
            break

def start_server():
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind(('127.0.0.1', 8080))
    server_socket.listen(5)
    print("Server is listening on port 8080...")
    
    while True:
        client_socket, address = server_socket.accept()
        client_handler = threading.Thread(target=handle_client, args=(client_socket, address))
        client_handler.start()

if __name__ == "__main__":
    start_server()







import socket

def send_message(client_socket):
    while True:
        message = input("Enter your message: ")
        client_socket.send(bytes(message, 'utf-8'))
        response = client_socket.recv(1024).decode('utf-8')
        print(f"Server says: {response}")

def start_client():
    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    client_socket.connect(('127.0.0.1', 8080))
    send_message(client_socket)

if __name__ == "__main__":
    start_client()
